[{"path":"/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution to {oak}","title":"Contribution to {oak}","text":"outlines propose change aok package. detailed info contributing {oak}, pharmaverse packages, please see development process guide well Developer Guides Articles section {admiral} website","code":""},{"path":"/CONTRIBUTING.html","id":"basics","dir":"","previous_headings":"","what":"Basics","title":"Contribution to {oak}","text":"new contribution, user creates issue issue tab GitHub put backlog. issues can range bug identification /fixes, enhancements functions, documentation, tests new features. advise contact us issue created via Slack (don’t access, use link join). can discuss details align expectations familiar {oak} philosophy programming strategy. team try review issues within next backlog meeting give initial feedback. Since 100% fully resourced software development team might issues take longer respond depending amount overall issues. Familiarize programming strategy, guidance GitHub usage unit testing. newly created issues reviewed within next backlog meeting creator receive initial feedback via comment. Someone core development team triage new issues assigning appropriate labels (“user request” can easily identify new requests). Issues meant taken users Pharma programming community.","code":""},{"path":[]},{"path":"/CONTRIBUTING.html","id":"type-1-contribution-with-code","dir":"","previous_headings":"","what":"Type 1 Contribution with Code:","title":"Contribution to {oak}","text":"First, user creates issue comments existing issue notify ’d like contribute code. Follow development process step--step guide. advise contact {oak} core development team directly via Slack submitting code complex functionality.","code":""},{"path":"/CONTRIBUTING.html","id":"type-2-contribution-without-code","dir":"","previous_headings":"","what":"Type 2 Contribution without Code:","title":"Contribution to {oak}","text":"User creates issue ideally contacts {oak} team member via Slack. {oak} core development team contact issue creator soon possible discuss details. See Contribution {admiral} additional details.","code":""},{"path":"/CONTRIBUTING.html","id":"containers-guideline","dir":"","previous_headings":"","what":"Containers guideline","title":"Contribution to {oak}","text":"guideline walk process setting using Oak image GitHub Codespaces Visual Studio Code’s devcontainer functionality.","code":""},{"path":"/CONTRIBUTING.html","id":"use-github-codespaces","dir":"","previous_headings":"","what":"Use GitHub Codespaces","title":"Contribution to {oak}","text":"Prerequisites : GitHub account. repository want open Codespaces must account must appropriate permissions. Open Repository : Navigate desired GitHub repository GitHub’s website. Start Codespaces : Click “Code” button (green color times). dropdown, ’ll find option named “Open Codespaces”. Click . Choose Create Codespace : ’ve already created Codespace repository, ’ll see listed. can click open. , click “+ New codespace” button. Configure Environment (needed) : Depending repository, might .devcontainer folder define environment. GitHub Codespaces use settings defined set environment. need customize install additional tools, can Codespace launched. Use Codespaces : environment set , ’ll instance Visual Studio Code running browser, connected repository. can now edit, run, debug code just like local environment. Close Codespace : ’re done, can close browser tab/window. Remember, ’ll billed (’re paid plan) time Codespace running, ’s good idea stop delete ’re using . can Codespaces tab GitHub repository.","code":""},{"path":"/CONTRIBUTING.html","id":"use-visual-code-devcontainer","dir":"","previous_headings":"","what":"Use Visual Code devcontainer","title":"Contribution to {oak}","text":"Prerequisites : Docker VS Code installed linux/arm64 supported R 4.3 Install devcontainer extension : left sidebar, click extensions icon (looks like square blocks Lego piece). search bar, type “Dev Containers” search extension. search results, locate “Dev Containers” extension provided Microsoft click ‘Install’ button. Open Container : VS Code, use command palette (Ctrl+Shift+P Cmd+Shift+P macOS) run “Dev Containers: Rebuild Reopen Container” command. VS Code set devcontainer using Oak image. Using Devcontainer : environment set , can start coding VS Code local environment, capabilities tools provided Oak image.","code":""},{"path":"/CONTRIBUTING.html","id":"use-docker-run","dir":"","previous_headings":"","what":"Use docker run","title":"Contribution to {oak}","text":"Prerequisites : docker installed Example command : command used start new container Docker image. ’s breakdown parameters used: docker run: basic command start new container Docker image. –rm: option ensures container removed automatically ’s stopped. useful don’t want keep container around ’re done , helping save storage space. -d: option runs container detached mode, means container runs background doesn’t attach command line session. –name oak-dev: assigns name oak-dev container. Naming containers makes easier identify manage. -p 127.0.0.1:8888:8787: maps port 8787 inside container port 8888 host machine, binds localhost IP (127.0.0.1). format -p ::. means traffic directed port 8888 host machine forwarded port 8787 container. ROOT=true: likely grants root permissions inside container. DISABLE_AUTH=true: likely disables authentication opening RStudio. -v “$(pwd):/home/rstudio/oak”: maps volume (essentially directory) host machine container. $(pwd) command returns current directory ’re host machine. current directory mapped /home/rstudio/oak inside container. useful sharing files host machine container. ghcr.io/pharmaverse/sdtm.oak-4.3:latest: name Docker image container created . ’s pulled GitHub Container Registry (ghcr.io) image belongs pharmaverse repository. image name sdtm.oak-4.3 tag used latest. image three versions available.","code":"docker run --rm -d \\   --name oak-dev \\   -p 127.0.0.1:8888:8787 \\   -e ROOT=true -e DISABLE_AUTH=true \\   -v \"$(pwd):/home/rstudio/oak\" \\   ghcr.io/pharmaverse/sdtm.oak-4.3:latest"},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Omar Garcia. Author, maintainer. Rammprasad Ganapathy. Author. F. Hoffmann-La Roche AG. Copyright holder, funder. Pfizer Inc. Copyright holder, funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Garcia O, Ganapathy R (2023). sdtm.oak: SDTM Data Transformation Engine. https://pharmaverse.github.io/oak/, https://github.com/pharmaverse/oak.","code":"@Manual{,   title = {sdtm.oak: SDTM Data Transformation Engine},   author = {Omar Garcia and Rammprasad Ganapathy},   year = {2023},   note = {https://pharmaverse.github.io/oak/, https://github.com/pharmaverse/oak}, }"},{"path":"/index.html","id":"sdtmoak","dir":"","previous_headings":"","what":"SDTM Data Transformation Engine","title":"SDTM Data Transformation Engine","text":"EDC Data Standard agnostic SDTM data transformation engine automates transformation raw clinical data ODM format SDTM based standard mapping algorithms","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"SDTM Data Transformation Engine","text":"can install development version sdtm.oak GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"pharmaverse/oak\")"},{"path":"/reference/sdtm.oak.html","id":null,"dir":"Reference","previous_headings":"","what":"An EDC and Data Standard agnostic SDTM data transformation engine that automates\nthe transformation of raw clinical data in ODM format to SDTM based on standard\nmapping algorithms — sdtm.oak","title":"An EDC and Data Standard agnostic SDTM data transformation engine that automates\nthe transformation of raw clinical data in ODM format to SDTM based on standard\nmapping algorithms — sdtm.oak","text":"EDC Data Standard agnostic SDTM data transformation engine automates transformation raw clinical data ODM format SDTM based standard mapping algorithms","code":""},{"path":"/news/index.html","id":"sdtmoak-development-version","dir":"Changelog","previous_headings":"","what":"sdtm.oak (development version)","title":"sdtm.oak (development version)","text":"Initial CRAN submission.","code":""}]
